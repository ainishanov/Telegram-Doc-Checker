const { getUserSettings, updateUserSettings, resetPrompt } = require('../models/userSettings');
const { getUserLimits, PLANS, getUserData } = require('../models/userLimits');
const { handleStatus, handleUpgrade, handleDowngrade, handleShowTariff } = require('./planHandlers');
const config = require('../config/config');

/**
 * –°–æ–∑–¥–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 */
function setupPermanentMenu(bot) {
  const menuButtons = {
    keyboard: [
      [{ text: 'üìä –ú–æ–π —Ç–∞—Ä–∏—Ñ' }],
      [{ text: 'üìã –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞' }]
    ],
    resize_keyboard: true,
    persistent: true
  };

  bot.setMyCommands([
    { command: '/start', description: '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
    { command: '/tariff', description: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ' },
    { command: '/plans', description: '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã' },
    { command: '/help', description: '–°–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞' }
  ]);

  return menuButtons;
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–∑ –º–µ–Ω—é
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function handleMenuCommand(bot, msg) {
  const chatId = msg.chat.id;
  const text = msg.text;
  
  switch (text) {
    case 'üìä –ú–æ–π —Ç–∞—Ä–∏—Ñ':
      handleShowTariff(bot, msg);
      break;
    case 'üìã –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞':
      handleHelp(bot, msg);
      break;
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const handleStart = async (bot, msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  const userData = getUserData(userId);
  
  const menuButtons = setupPermanentMenu(bot);
  
  const message = `
–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –µ–≥–æ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∏—Å–∫–æ–≤, –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –ø–æ–¥–≤–æ–¥–Ω—ã—Ö –∫–∞–º–Ω–µ–π.

*–í–∞–∂–Ω–æ:* –£ –≤–∞—Å –µ—Å—Ç—å 3 –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞.
`;
  
  await bot.sendMessage(chatId, message, { 
    parse_mode: 'Markdown',
    reply_markup: menuButtons
  });
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const handleHelp = async (bot, msg) => {
  const helpText = `
ü§ñ *–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:*

/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/users - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)

üìÑ *–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:*
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –∏–ª–∏ DOC/DOCX –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.
–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å –≤ –¥–æ–≥–æ–≤–æ—Ä–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞.
`;

  await bot.sendMessage(msg.chat.id, helpText, { parse_mode: 'Markdown' });
};

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /users
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
const handleUsers = async (bot, msg) => {
  const chatId = msg.chat.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
  if (!config.adminIds.includes(msg.from.id.toString())) {
    await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    return;
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const fs = require('fs');
    const path = require('path');
    const USER_SETTINGS_FILE = path.join(__dirname, '../../data/userSettings.json');
    const USER_LIMITS_FILE = path.join(__dirname, '../../data/userLimits.json');
    
    let userSettings = {};
    let userLimits = {};
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    if (fs.existsSync(USER_SETTINGS_FILE)) {
      userSettings = JSON.parse(fs.readFileSync(USER_SETTINGS_FILE, 'utf8'));
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ª–∏–º–∏—Ç–∞—Ö
    if (fs.existsSync(USER_LIMITS_FILE)) {
      userLimits = JSON.parse(fs.readFileSync(USER_LIMITS_FILE, 'utf8'));
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const userIds = new Set([...Object.keys(userSettings), ...Object.keys(userLimits)]);
    const totalUsers = userIds.size;
    
    // –°—á–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º
    let planCounts = {
      FREE: 0,
      BASIC: 0,
      PRO: 0,
      UNLIMITED: 0
    };
    
    // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –æ–ø–ª–∞—Ç—ã
    let paymentStatuses = {
      none: 0,
      pending: 0,
      paid: 0
    };
    
    // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    let totalRequests = 0;
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for (const userId of userIds) {
      const userLimit = userLimits[userId];
      
      if (userLimit) {
        // –°—á–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º
        const plan = userLimit.plan || 'FREE';
        planCounts[plan] = (planCounts[plan] || 0) + 1;
        
        // –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –æ–ø–ª–∞—Ç—ã
        const paymentStatus = userLimit.paymentStatus || 'none';
        paymentStatuses[paymentStatus] = (paymentStatuses[paymentStatus] || 0) + 1;
        
        // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
        totalRequests += userLimit.requestsUsed || 0;
      }
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    const message = `
*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞:*

–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}

*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ —Ç–∞—Ä–∏—Ñ–∞–º:*
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: ${planCounts.FREE}
‚Ä¢ –ë–∞–∑–æ–≤—ã–π: ${planCounts.BASIC}
‚Ä¢ –ü—Ä–æ—Ñ–∏: ${planCounts.PRO}
‚Ä¢ –ë–µ–∑–ª–∏–º–∏—Ç: ${planCounts.UNLIMITED}

*–°—Ç–∞—Ç—É—Å—ã –æ–ø–ª–∞—Ç—ã:*
‚Ä¢ –ë–µ–∑ –æ–ø–ª–∞—Ç—ã: ${paymentStatuses.none}
‚Ä¢ –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã: ${paymentStatuses.pending}
‚Ä¢ –û–ø–ª–∞—á–µ–Ω–æ: ${paymentStatuses.paid}

*–ó–∞–ø—Ä–æ—Å–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:* ${totalRequests}
`;
    
    await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
  }
};

module.exports = {
  handleStart,
  handleHelp,
  handleUsers,
  handleMenuCommand,
  setupPermanentMenu
}; 