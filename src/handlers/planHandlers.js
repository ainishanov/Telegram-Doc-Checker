const { 
  getUserData, 
  getUserPlan, 
  canUserMakeRequest, 
  changePlan, 
  activateSubscription, 
  getAllPlans,
  PLANS
} = require('../models/userLimits');

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ –∏ —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleShowTariff(bot, msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const planInfo = getUserPlan(userId);
  const userData = getUserData(userId);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ–∫—É—â–µ–º —Ç–∞—Ä–∏—Ñ–µ
  let message = `*–í–∞—à —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ: ${planInfo.name}*\n\n`;
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
  if (planInfo.requestLimit === Infinity) {
    message += 'üìä *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤:* –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n';
  } else {
    message += `üìä *–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫:* ${planInfo.requestsUsed} –∏–∑ ${planInfo.requestLimit}\n`;
    message += `üìà *–û—Å—Ç–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–æ–∫:* ${planInfo.requestsRemaining}\n`;
  }
  
  // –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ
  if (planInfo.id !== 'FREE') {
    if (userData.subscriptionData && userData.subscriptionData.active) {
      const endDate = new Date(userData.subscriptionData.endDate);
      const formattedDate = endDate.toLocaleDateString('ru-RU');
      message += `\nüí≥ *–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:* –ê–∫—Ç–∏–≤–Ω–∞\n`;
      message += `üìÖ *–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:* ${formattedDate}\n`;
    } else {
      message += `\n‚ö†Ô∏è *–°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏:* –ù–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞\n`;
      message += `–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–∞—Ä–∏—Ñ" –Ω–∏–∂–µ.\n`;
    }
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
  const keyboard = {
    inline_keyboard: []
  };
  
  // –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
  if (planInfo.id !== 'FREE' && (!userData.subscriptionData || !userData.subscriptionData.active)) {
    keyboard.inline_keyboard.push([
      { text: 'üí≥ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–∞—Ä–∏—Ñ', callback_data: 'activate_subscription' }
    ]);
  }
  
  // –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–∞—Ä–∏—Ñ–∞
  keyboard.inline_keyboard.push([
    { text: 'üìã –°–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ', callback_data: 'show_plans' }
  ]);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–∞—Ä–∏—Ñ–µ
  await bot.sendMessage(chatId, message, {
    parse_mode: 'Markdown',
    reply_markup: keyboard
  });
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleShowPlans(bot, msg) {
  const chatId = msg.chat.id;
  
  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
  const plans = getAllPlans();
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–∞—Ä–∏—Ñ–æ–≤
  let message = '*–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:*\n\n';
  message += '*–í—Å–µ —Ç–∞—Ä–∏—Ñ—ã –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–Ω–∞–ª–∏–∑–∞, –æ—Ç–ª–∏—á–∏–µ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø—Ä–æ–≤–µ—Ä–æ–∫!*\n\n';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
  for (const plan of plans) {
    message += `*${plan.name}*`;
    
    if (plan.id !== 'FREE') {
      message += ` - ${plan.price} ‚ÇΩ/–º–µ—Å`;
    }
    
    message += '\n';
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
    if (plan.requestLimit === Infinity) {
      message += '‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤\n';
    } else {
      if (plan.id === 'FREE') {
        message += `‚Ä¢ ${plan.requestLimit} –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞–≤—Å–µ–≥–¥–∞\n`;
      } else {
        message += `‚Ä¢ ${plan.requestLimit} –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –≤ –º–µ—Å—è—Ü\n`;
      }
    }
    
    message += '\n';
  }
  
  message += '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç:';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
  const keyboard = {
    inline_keyboard: [
      [
        { text: '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π', callback_data: 'select_plan_FREE' }
      ],
      [
        { text: `–ë–∞–∑–æ–≤—ã–π - ${PLANS.BASIC.price} ‚ÇΩ`, callback_data: 'select_plan_BASIC' }
      ],
      [
        { text: `–ü—Ä–æ—Ñ–∏ - ${PLANS.PRO.price} ‚ÇΩ`, callback_data: 'select_plan_PRO' }
      ],
      [
        { text: `–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π - ${PLANS.UNLIMITED.price} ‚ÇΩ`, callback_data: 'select_plan_UNLIMITED' }
      ],
      [
        { text: '¬´ –ù–∞–∑–∞–¥', callback_data: 'back_to_tariff' }
      ]
    ]
  };
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ç–∞—Ä–∏—Ñ–æ–≤
  await bot.sendMessage(chatId, message, {
    parse_mode: 'Markdown',
    reply_markup: keyboard
  });
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {string} planId - ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleShowPlanDetails(bot, planId, msg) {
  const chatId = msg.chat.id;
  const plan = PLANS[planId];
  
  if (!plan) {
    await bot.sendMessage(chatId, '‚ùå –¢–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }
  
  let message = `*–¢–∞—Ä–∏—Ñ "${plan.name}"*\n\n`;
  message += `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: *${plan.price} ‚ÇΩ*\n`;
  message += `‚è± –ü–µ—Ä–∏–æ–¥: *${plan.duration} –¥–Ω–µ–π*\n\n`;
  
  if (plan.requestLimit === Infinity) {
    message += `üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ*\n\n`;
  } else {
    message += `üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *${plan.requestLimit} –≤ –º–µ—Å—è—Ü*\n\n`;
  }
  
  message += plan.description;
  
  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ (–æ—Ç–ª–∏—á–∞—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ç–∞—Ä–∏—Ñ–∞)
  let keyboard;
  
  if (planId === 'FREE') {
    // –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ - —Å—Ä–∞–∑—É –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
    keyboard = {
      inline_keyboard: [
        [
          { text: '‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ', callback_data: `direct_activate_${planId}` }
        ],
        [
          { text: '¬´ –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º', callback_data: 'show_plans' }
        ]
      ]
    };
  } else {
    // –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ - –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã
    keyboard = {
      inline_keyboard: [
        [
          { text: 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', callback_data: `direct_activate_${planId}` }
        ],
        [
          { text: '¬´ –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º', callback_data: 'show_plans' }
        ]
      ]
    };
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–∞—Ä–∏—Ñ–∞ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
  await bot.sendMessage(chatId, message, {
    parse_mode: 'Markdown',
    reply_markup: keyboard
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞ 
 * @param {string} planId - ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleSelectPlan(bot, planId, msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  
  // –ú–µ–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const result = changePlan(userId, planId);
  
  if (!result.success) {
    await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: ${result.message}`);
    return;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Å–º–µ–Ω–µ —Ç–∞—Ä–∏—Ñ–∞
  let message = `‚úÖ *–¢–∞—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!*\n\n`;
  message += `–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ *${result.plan.name}*\n\n`;
  
  // –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ —Å—Ä–∞–∑—É –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
  if (planId === 'FREE') {
    message += '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ —Å—Ä–∞–∑—É –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n';
    message += `–£ –≤–∞—Å –µ—Å—Ç—å ${result.plan.requestLimit} –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n`;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const keyboard = {
      inline_keyboard: [
        [
          { text: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π —Ç–∞—Ä–∏—Ñ', callback_data: 'show_tariff' }
        ]
      ]
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown',
      reply_markup: keyboard
    });
    return;
  }
  
  // –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
  message += `–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n`;
  message += `–°—Ç–æ–∏–º–æ—Å—Ç—å: *${result.plan.price} ‚ÇΩ* –∑–∞ –º–µ—Å—è—Ü\n`;
  
  if (result.plan.requestLimit === Infinity) {
    message += `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ*\n\n`;
  } else {
    message += `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *${result.plan.requestLimit}*\n\n`;
  }
  
  message += '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã (—ç—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è).';
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
  const keyboard = {
    inline_keyboard: [
      [
        { text: 'üí≥ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å', callback_data: 'activate_subscription' }
      ],
      [
        { text: '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ', callback_data: 'show_tariff' }
      ]
    ]
  };
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  await bot.sendMessage(chatId, message, {
    parse_mode: 'Markdown',
    reply_markup: keyboard
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞ 
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleActivateSubscription(bot, msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ç–∞—Ä–∏—Ñ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const planInfo = getUserPlan(userId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞—Ä–∏—Ñ –ø–ª–∞—Ç–Ω—ã–π
  if (planInfo.id === 'FREE') {
    await bot.sendMessage(chatId, '‚ùå –ù–µ–ª—å–∑—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.');
    return;
  }
  
  // –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –∏–º–∏—Ç–∞—Ü–∏–∏ –æ–ø–ª–∞—Ç—ã
  await bot.sendMessage(chatId, 
    '*–ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã*\n\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂...',
    { parse_mode: 'Markdown' }
  );
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
  setTimeout(async () => {
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    const result = activateSubscription(userId);
    
    if (!result.success) {
      await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${result.message}`);
      return;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã
    const startDate = new Date(result.subscription.startDate).toLocaleDateString('ru-RU');
    const endDate = new Date(result.subscription.endDate).toLocaleDateString('ru-RU');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    let message = `üéâ *–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!*\n\n`;
    message += `–¢–∞—Ä–∏—Ñ: *${planInfo.name}*\n`;
    message += `–°—Ç–æ–∏–º–æ—Å—Ç—å: *${planInfo.price} ‚ÇΩ*\n`;
    message += `–ü–µ—Ä–∏–æ–¥: —Å ${startDate} –ø–æ ${endDate}\n\n`;
    
    if (planInfo.requestLimit === Infinity) {
      message += `–î–æ—Å—Ç—É–ø–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ*\n\n`;
    } else {
      message += `–î–æ—Å—Ç—É–ø–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *${planInfo.requestLimit}*\n\n`;
    }
    
    message += '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const keyboard = {
      inline_keyboard: [
        [
          { text: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π —Ç–∞—Ä–∏—Ñ', callback_data: 'show_tariff' }
        ]
      ]
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown',
      reply_markup: keyboard
    });
  }, 2000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ 2 —Å–µ–∫—É–Ω–¥—ã
}

/**
 * –ü—Ä—è–º–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞ –æ–¥–∏–Ω —à–∞–≥
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞ 
 * @param {string} planId - ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
 * @param {Object} msg - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function handleDirectActivation(bot, planId, msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id.toString();
  
  console.log(`[DEBUG] –ù–∞—á–∞–ª–æ –ø—Ä—è–º–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞ ${planId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ
  if (planId === 'FREE') {
    console.log(`[DEBUG] –ê–∫—Ç–∏–≤–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    await handleSelectPlan(bot, planId, msg);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞
  if (!PLANS[planId]) {
    console.log(`[ERROR] –¢–∞—Ä–∏—Ñ ${planId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    return;
  }
  
  // –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞
  await bot.sendMessage(chatId, 
    `*–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–∞ "${PLANS[planId].name}"*\n\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à –∑–∞–ø—Ä–æ—Å...`,
    { parse_mode: 'Markdown' }
  );
  
  // –®–∞–≥ 1: –ú–µ–Ω—è–µ–º —Ç–∞—Ä–∏—Ñ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  console.log(`[DEBUG] –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–∞ ${planId}`);
  const changeResult = changePlan(userId, planId);
  
  if (!changeResult.success) {
    console.log(`[ERROR] –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞: ${changeResult.message}`);
    await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: ${changeResult.message}`);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞—Ä–∏—Ñ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è
  const checkData = getUserData(userId);
  console.log(`[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞: —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ=${checkData.plan}, –æ–∂–∏–¥–∞–µ–º—ã–π=${planId}`);
  
  if (checkData.plan !== planId) {
    console.log(`[ERROR] –¢–∞—Ä–∏—Ñ –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω: ${checkData.plan} !== ${planId}`);
    await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: –¢–∞—Ä–∏—Ñ –Ω–µ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.`);
    return;
  }
  
  // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
  setTimeout(async () => {
    // –®–∞–≥ 2: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    console.log(`[DEBUG] –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} —Å —Ç–∞—Ä–∏—Ñ–æ–º ${planId}`);
    const result = activateSubscription(userId);
    
    if (!result.success) {
      console.log(`[ERROR] –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: ${result.message}`);
      await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: ${result.message}`);
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞
    const userData = getUserData(userId);
    console.log(`[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: active=${userData.subscriptionData?.active}, plan=${userData.plan}`);
    
    if (!userData.subscriptionData || !userData.subscriptionData.active) {
      console.log(`[ERROR] –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞`);
      await bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –±—ã–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –º–µ–Ω—é "–ú–æ–π —Ç–∞—Ä–∏—Ñ".`);
      return;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã
    const startDate = new Date(result.subscription.startDate).toLocaleDateString('ru-RU');
    const endDate = new Date(result.subscription.endDate).toLocaleDateString('ru-RU');
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    let message = `üéâ *–¢–∞—Ä–∏—Ñ "${PLANS[planId].name}" —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!*\n\n`;
    message += `üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: *${PLANS[planId].price} ‚ÇΩ*\n`;
    message += `üìÖ –ü–µ—Ä–∏–æ–¥: —Å ${startDate} –ø–æ ${endDate}\n\n`;
    
    if (PLANS[planId].requestLimit === Infinity) {
      message += `üìä –î–æ—Å—Ç—É–ø–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ*\n\n`;
    } else {
      message += `üìä –î–æ—Å—Ç—É–ø–Ω–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤: *${PLANS[planId].requestLimit}*\n\n`;
    }
    
    message += '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!';
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const keyboard = {
      inline_keyboard: [
        [
          { text: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–π —Ç–∞—Ä–∏—Ñ', callback_data: 'show_tariff' }
        ]
      ]
    };
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown',
      reply_markup: keyboard
    });
    
    console.log(`[DEBUG] –£—Å–ø–µ—à–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–∞ ${planId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  }, 2000); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ 2 —Å–µ–∫—É–Ω–¥—ã
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏
 * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
 * @param {Object} query - Callback-–∑–∞–ø—Ä–æ—Å
 */
async function handleTariffCallback(bot, query) {
  const chatId = query.message.chat.id;
  const messageId = query.message.message_id;
  const data = query.data;
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    await bot.answerCallbackQuery(query.id);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ
    if (data === 'show_tariff') {
      await bot.deleteMessage(chatId, messageId);
      await handleShowTariff(bot, query.message);
      return;
    }
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤
    if (data === 'show_plans') {
      await bot.deleteMessage(chatId, messageId);
      await handleShowPlans(bot, query.message);
      return;
    }
    
    // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞—Ä–∏—Ñ–µ
    if (data === 'back_to_tariff') {
      await bot.deleteMessage(chatId, messageId);
      await handleShowTariff(bot, query.message);
      return;
    }
    
    // –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
    if (data === 'activate_subscription') {
      await bot.deleteMessage(chatId, messageId);
      await handleActivateSubscription(bot, query.message);
      return;
    }
    
    // –ü—Ä—è–º–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–∞—Ä–∏—Ñ–∞ (–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤—ã–±–æ—Ä –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è)
    if (data.startsWith('direct_activate_')) {
      const planId = data.replace('direct_activate_', '');
      await bot.deleteMessage(chatId, messageId);
      await handleDirectActivation(bot, planId, query.message);
      return;
    }
    
    // –í—ã–±–æ—Ä —Ç–∞—Ä–∏—Ñ–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    if (data.startsWith('select_plan_')) {
      const planId = data.replace('select_plan_', '');
      await bot.deleteMessage(chatId, messageId);
      await handleShowPlanDetails(bot, planId, query.message);
      return;
    }
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
    if (data.startsWith('confirm_plan_')) {
      const planId = data.replace('confirm_plan_', '');
      await bot.deleteMessage(chatId, messageId);
      await handleSelectPlan(bot, planId, query.message);
      return;
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
  }
}

module.exports = {
  handleShowTariff,
  handleShowPlans,
  handleTariffCallback
}; 